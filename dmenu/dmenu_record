#!/usr/bin/bash

# Usage:
# `$0`: Ask for recording type via dmenu
# `$0 screencast`: Record both audio and screen
# `$0 video`: Record only screen
# `$0 audio`: Record only audio
# `$0 kill`: Kill existing recording
#
# If there is already a running instance, user will be prompted to end it.

notify() {
  local header="ffmpeg recorder"
  local message="$1"
  notify-send "$header" "$message" -c "$2" -u "$3"
}

update_sb() {
  pkill -RTMIN+16 "${STATUSBAR:-dwmblocks}"
}

updateicon() {
  echo "$1" > /tmp/recordingicon
  update_sb
}

killrecording() {
  recpid="$(cat /tmp/recordingpid)"
  # kill with SIGTERM, allowing finishing touches.
  kill -15 "$recpid"
  rm -f /tmp/recordingpid
  updateicon ""
  update_sb
  # even after SIGTERM, ffmpeg may still run, so SIGKILL it.
  sleep 3
  kill -9 "$recpid"
  notify "Record ended." "warn" "critical"
  exit
}

screencast() {
  ffmpeg -y \
    -f x11grab \
    -framerate 60 \
    -s "$(xdpyinfo | awk '/dimensions/ {print $2}')" \
    -i "$DISPLAY" \
    -f alsa -i default \
    -r 30 \
    -c:v h264 -crf 0 -preset ultrafast -c:a aac \
    "$HOME/vault/videos/screencast/screencast-$(date '+%I:%M:%S %p %Y-%m-%d')".mp4 &

  echo $! > /tmp/recordingpid
  updateicon ""
  notify "Screencast recording." "info" "normal"
}

video() {
  ffmpeg \
    -f x11grab \
    -s "$(xdpyinfo | awk '/dimensions/ {print $2}')" \
    -i "$DISPLAY" \
    -c:v libx264 -qp 0 -r 30 \
    "$HOME/vault/videos/screenonly/video-$(date '+%I:%M:%S %p %Y-%m-%d')".mkv &

  echo $! > /tmp/recordingpid
  updateicon ""
  notify "Video recording." "info" "normal"
}

webcam() {
  ffmpeg \
    -f v4l2 \
    -i /dev/video0 \
    -video_size "$(xdpyinfo | awk '/dimensions/ {print $2}')" \
    "$HOME/vault/videos/webcam/webcam-$(date '+%I:%M:%S %p %Y-%m-%d')".mkv &

  echo $! > /tmp/recordingpid
  updateicon "犯"
  notify "Webcam recording." "info" "normal"
}

audio() {
  ffmpeg \
    -f alsa -i default \
    -c:a flac \
    "$HOME/vault/music/recording/audio-$(date '+%I:%M:%S %p %Y-%m-%d')".flac &

  echo $! > /tmp/recordingpid
  updateicon ""
  notify "Audio recording." "info" "normal"
}

videoselected() {
  slop -f "%x %y %w %h" > /tmp/slop
  read -r X Y W H < /tmp/slop
  rm /tmp/slop

  ffmpeg \
    -f x11grab \
    -framerate 60 \
    -video_size "$W"x"$H" \
    -i :0.0+"$X,$Y" \
    -c:v libx264 -qp 0 -r 30 \
    "$HOME/vault/videos/screenonly/selected/box-$(date '+%I:%M:%S %p %Y-%m-%d')".mkv &

  echo $! > /tmp/recordingpid
  updateicon ""
  notify "Selected video recording." "info" "normal"
}

askrecording() {
  choice=$(printf "screencast\\nvideo\\nvideo selected\\naudio\\nwebcam" | dmenu -p "Select recording style:")
  case "$choice" in
    screencast) screencast ;;
    audio) audio ;;
    video) video ;;
    *selected) videoselected ;;
    webcam) webcam ;;
  esac
}

asktoend() {
  response=$(printf "No\\nYes" | dmenu -p "Recording still active. End recording?") &&
    [[ "$response" == "Yes" ]] && killrecording
}

case "$1" in
  screencast) screencast ;;
  audio) audio ;;
  video) video ;;
  *selected) videoselected ;;
  kill) killrecording ;;
  *) ([[ -f /tmp/recordingpid ]] && asktoend && exit) || askrecording ;;
esac

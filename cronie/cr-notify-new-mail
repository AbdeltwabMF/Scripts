#!/usr/bin/bash
#
# Description: Notify with the number of new messages whenever mail has been retrieved.
# This script is called by ./cr-sync-mail

PREFIX="${XDG_DATA_HOME:-$HOME/.local/share}"/Mail/

declare -a locations=(
  "gmail/Inbox/new"
  "gmail/[Gmail]/Spam/new"
  "gmail_2/Inbox/new"
  "gmail_2/[Gmail]/Spam/new"
  "office/Inbox/new"
  "office/Junk/new"
  "azhar-uni/Inbox/new"
  "azhar-uni/Spambox/new"
)

declare -a messages_time=()
for ((i = 0; i < ${#locations[@]}; ++i)); do
  tmp=($(ls ${PREFIX}"${locations[i]}" | awk -F. '{print $1}'))

  for ((j = 0; j < ${#tmp[@]}; ++j)); do
    messages_time+=("${tmp[j]}")
  done
done

IFS=$'\n'
sorted=($(sort -h <<< "${messages_time[*]}"))
unset IFS

notify() {
  local header
  header="ðŸ“¬ E-Mail"
  local message
  message="You have <span color=\"red\">$1</span> new mails"
  notify-send "$header" "$message"
}

search() {
  local low=0
  local high=${#sorted[@]}
  local unix_time
  # Search for messages older than 2 minutes
  unix_time=$(($1 - 120))
  local answer=-1

  while ((low < high)); do
    mid=$(((low + high) / 2))
    if ((sorted[mid] >= unix_time)); then
      high=$((mid))
      answer=$((mid))
    else
      low=$((mid + 1))
    fi
  done

  if ((answer < 0)); then
    exit 0
  else
    local new
    new=$((${#sorted[@]} - answer))
    notify "${new}"
  fi
}

search "$(date '+%s')"
